# application-dev.yml (서버 개발 설정)
# 개발 서버 환경 설정
spring:
  data:
    # Redis 설정
    redis:
      host: ${PROD_REDIS_HOST}
      port: ${PROD_REDIS_PORT:6379}
      password: ${PROD_REDIS_PASSWORD}
    # MongoDB 설정
    mongodb:
      database: ${PROD_MONGODB_DATABASE:indicator_db}
      uri: mongodb://${PROD_MONGODB_USERNAME}:${PROD_MONGODB_PASSWORD}@${PROD_MONGODB_HOST}:${PROD_MONGODB_PORT:27017}/${PROD_MONGODB_DATABASE}?authSource=admin
  # MySQL 설정
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${PROD_DB_HOST}:${PROD_DB_PORT:3306}/${PROD_DB_NAME}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&useUniCode=yes&characterEncoding=UTF-8
    username: ${PROD_DB_USERNAME}
    password: ${PROD_DB_PASSWORD}
  # JPA 설정 추가
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    show-sql: false               #  운영 환경에서는 비활성화
    hibernate:
      ddl-auto: none              #  운영 환경에서는 none
    properties:
      hibernate:
        format_sql: false         #  운영 환경에서는 비활성화
        show_sql: false           #  운영 환경에서는 비활성화
        use_sql_comments: false   #  운영 환경에서는 비활성화
        highlight_sql: false      #  운영 환경에서는 비활성화


# 개발 환경 로깅 설정
logging:
  config: classpath:log4j2-dev.xml
  level:
    root: INFO
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    com.smashup.indicator: DEBUG
    com.zaxxer.hikari.pool: INFO
    sun.rmi: WARN
    jdbc.sqlonly: DEBUG    
    jdbc.sqltiming: DEBUG  
    jdbc.resultsettable: INFO
    jdbc.audit: WARN      
    jdbc.resultset: WARN  
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n'
    file: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n'
    
#app:
#  domain: ${MY_DOMAIN}
#  frontend-url: ${PROD_FRONTEND_URL}
#  invitation:
#    expiry-hours: 48  # 초대장 유효 시간 (시간)